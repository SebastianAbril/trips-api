name: CI/CD
on:
  push:
    branches:
      - master
      - repository-package-layer

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: npm install
        run: npm install

      - name: npm  build
        run: npm run build

      - name: unit testing
        run: npm run test

  integration:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11
        # Provide the password for postgres
        env:
          POSTGRES_DB: trips_db
          POSTGRES_USER: trips_user
          POSTGRES_PASSWORD: 123456
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: npm install
        run: npm install

      - name: run migrations
        run: npm run migration:run
        env:
          DATABASE_HOST: postgres
          DATABASE_PORT: 5432
          DATABASE_USERNAME: trips_user
          DATABASE_PASSWORD: 123456
          DATABASE_NAME: trips_db

      - name: integration testing
        run: npm run test:integration
        env:
          DATABASE_HOST: postgres
          DATABASE_PORT: 5432
          DATABASE_USERNAME: trips_user
          DATABASE_PASSWORD: 123456
          DATABASE_NAME: trips_db

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
      - integration
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t sebastianabril6/trips-api:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push sebastianabril6/trips-api:latest

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_KEY }}
          script: |
            docker rm -f trips-api || true
            docker run -d --pull always --restart always --name trips-api --net trip-net -p 3000:3000 -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} -e DATABASE_PORT=${{ secrets.DATABASE_PORT }} -e DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} -e PAYMENT_BASE_URL=${{ secrets.PAYMENT_BASE_URL }} -e PAYMENT_PUBLIC_KEY=${{ secrets.PAYMENT_PUBLIC_KEY }} -e PAYMENT_PRIVATE_KEY=${{ secrets.PAYMENT_PRIVATE_KEY }} sebastianabril6/trips-api:latest
